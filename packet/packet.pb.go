// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: packet.proto

package packet

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StateEnum_State int32

const (
	StateEnum_UNKNOWN  StateEnum_State = 0
	StateEnum_BEGIN    StateEnum_State = 1
	StateEnum_END      StateEnum_State = 2
	StateEnum_ABOUT    StateEnum_State = 3
	StateEnum_COMMIT   StateEnum_State = 4
	StateEnum_ROLLBACK StateEnum_State = 5
)

var StateEnum_State_name = map[int32]string{
	0: "UNKNOWN",
	1: "BEGIN",
	2: "END",
	3: "ABOUT",
	4: "COMMIT",
	5: "ROLLBACK",
}

var StateEnum_State_value = map[string]int32{
	"UNKNOWN":  0,
	"BEGIN":    1,
	"END":      2,
	"ABOUT":    3,
	"COMMIT":   4,
	"ROLLBACK": 5,
}

func (x StateEnum_State) String() string {
	return proto.EnumName(StateEnum_State_name, int32(x))
}

func (StateEnum_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0, 0}
}

type StateEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateEnum) Reset()         { *m = StateEnum{} }
func (m *StateEnum) String() string { return proto.CompactTextString(m) }
func (*StateEnum) ProtoMessage()    {}
func (*StateEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{0}
}
func (m *StateEnum) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StateEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StateEnum.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StateEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateEnum.Merge(m, src)
}
func (m *StateEnum) XXX_Size() int {
	return m.Size()
}
func (m *StateEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_StateEnum.DiscardUnknown(m)
}

var xxx_messageInfo_StateEnum proto.InternalMessageInfo

type TxLog struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                StateEnum_State `protobuf:"varint,2,opt,name=state,proto3,enum=packet.StateEnum_State" json:"state,omitempty"`
	Task                 string          `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
	Type                 string          `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Data                 []byte          `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp            int64           `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ErrorMessage         string          `protobuf:"bytes,7,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TxLog) Reset()         { *m = TxLog{} }
func (m *TxLog) String() string { return proto.CompactTextString(m) }
func (*TxLog) ProtoMessage()    {}
func (*TxLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_e9ef1a6541f9f9e7, []int{1}
}
func (m *TxLog) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TxLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TxLog.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TxLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxLog.Merge(m, src)
}
func (m *TxLog) XXX_Size() int {
	return m.Size()
}
func (m *TxLog) XXX_DiscardUnknown() {
	xxx_messageInfo_TxLog.DiscardUnknown(m)
}

var xxx_messageInfo_TxLog proto.InternalMessageInfo

func (m *TxLog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TxLog) GetState() StateEnum_State {
	if m != nil {
		return m.State
	}
	return StateEnum_UNKNOWN
}

func (m *TxLog) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *TxLog) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TxLog) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *TxLog) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *TxLog) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterEnum("packet.StateEnum_State", StateEnum_State_name, StateEnum_State_value)
	proto.RegisterType((*StateEnum)(nil), "packet.StateEnum")
	proto.RegisterType((*TxLog)(nil), "packet.TxLog")
}

func init() { proto.RegisterFile("packet.proto", fileDescriptor_e9ef1a6541f9f9e7) }

var fileDescriptor_e9ef1a6541f9f9e7 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x3b, 0x49, 0x27, 0x6d, 0xee, 0x9f, 0xbf, 0x0c, 0x77, 0xe3, 0x20, 0x12, 0x42, 0xdd,
	0x64, 0x63, 0x17, 0xba, 0x74, 0xd5, 0xd4, 0x22, 0xa5, 0x4d, 0x02, 0x31, 0x45, 0xe8, 0x46, 0x46,
	0x33, 0x94, 0x50, 0x62, 0x42, 0x32, 0x82, 0x7d, 0x13, 0x5f, 0x48, 0x70, 0xe9, 0x23, 0x48, 0x7c,
	0x11, 0xe9, 0xa4, 0xe8, 0xee, 0x9c, 0x8f, 0xc3, 0xb9, 0x87, 0x0b, 0x4e, 0x25, 0x9e, 0x76, 0x52,
	0x4d, 0xaa, 0xba, 0x54, 0x25, 0x5a, 0x9d, 0x1b, 0x6f, 0xc0, 0xbe, 0x53, 0x42, 0xc9, 0xf9, 0xf3,
	0x4b, 0x31, 0x0e, 0x81, 0x6a, 0x83, 0xff, 0x60, 0xb0, 0x8e, 0x96, 0x51, 0x7c, 0x1f, 0xb1, 0x1e,
	0xda, 0x40, 0x83, 0xf9, 0xed, 0x22, 0x62, 0x04, 0x07, 0x60, 0xce, 0xa3, 0x1b, 0x66, 0x1c, 0xd8,
	0x34, 0x88, 0xd7, 0x29, 0x33, 0x11, 0xc0, 0x9a, 0xc5, 0x61, 0xb8, 0x48, 0x59, 0x1f, 0x1d, 0x18,
	0x26, 0xf1, 0x6a, 0x15, 0x4c, 0x67, 0x4b, 0x46, 0xc7, 0xef, 0x04, 0x68, 0xfa, 0xba, 0x2a, 0xb7,
	0x38, 0x02, 0x23, 0xcf, 0x38, 0xf1, 0x88, 0x6f, 0x27, 0x46, 0x9e, 0xe1, 0x05, 0xd0, 0xe6, 0x70,
	0x88, 0x1b, 0x1e, 0xf1, 0x47, 0x97, 0x27, 0x93, 0xe3, 0xb6, 0xdf, 0x29, 0x9d, 0x4a, 0xba, 0x14,
	0x22, 0xf4, 0x95, 0x68, 0x76, 0xdc, 0xd4, 0x05, 0x5a, 0x6b, 0xb6, 0xaf, 0x24, 0xef, 0x1f, 0xd9,
	0xbe, 0xd2, 0xb9, 0x4c, 0x28, 0xc1, 0xa9, 0x47, 0x7c, 0x27, 0xd1, 0x1a, 0xcf, 0xc0, 0x56, 0x79,
	0x21, 0x1b, 0x25, 0x8a, 0x8a, 0x5b, 0x1e, 0xf1, 0xcd, 0xe4, 0x0f, 0xe0, 0x39, 0xfc, 0x97, 0x75,
	0x5d, 0xd6, 0x0f, 0x85, 0x6c, 0x1a, 0xb1, 0x95, 0x7c, 0xa0, 0xeb, 0x1c, 0x0d, 0xc3, 0x8e, 0x05,
	0xa7, 0x1f, 0xad, 0x4b, 0x3e, 0x5b, 0x97, 0x7c, 0xb5, 0x2e, 0x79, 0xfb, 0x76, 0x7b, 0x9b, 0xe1,
	0xe4, 0xba, 0x5b, 0xfc, 0x68, 0xe9, 0x77, 0x5e, 0xfd, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xdf,
	0xcb, 0x94, 0x5e, 0x01, 0x00, 0x00,
}

func (m *StateEnum) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StateEnum) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StateEnum) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *TxLog) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TxLog) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TxLog) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMessage) > 0 {
		i -= len(m.ErrorMessage)
		copy(dAtA[i:], m.ErrorMessage)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.ErrorMessage)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Timestamp != 0 {
		i = encodeVarintPacket(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Type) > 0 {
		i -= len(m.Type)
		copy(dAtA[i:], m.Type)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Type)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Task) > 0 {
		i -= len(m.Task)
		copy(dAtA[i:], m.Task)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Task)))
		i--
		dAtA[i] = 0x1a
	}
	if m.State != 0 {
		i = encodeVarintPacket(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPacket(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPacket(dAtA []byte, offset int, v uint64) int {
	offset -= sovPacket(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StateEnum) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TxLog) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovPacket(uint64(m.State))
	}
	l = len(m.Task)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Type)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovPacket(uint64(m.Timestamp))
	}
	l = len(m.ErrorMessage)
	if l > 0 {
		n += 1 + l + sovPacket(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPacket(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPacket(x uint64) (n int) {
	return sovPacket(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StateEnum) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StateEnum: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StateEnum: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TxLog) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TxLog: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TxLog: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= StateEnum_State(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Task", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Task = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Type = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPacket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPacket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPacket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPacket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPacket(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPacket
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPacket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPacket
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPacket
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPacket
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPacket        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPacket          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPacket = fmt.Errorf("proto: unexpected end of group")
)
